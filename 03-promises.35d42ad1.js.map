{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGA,SAASC,EAAcC,EAAUC,GAC3B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIEQ,SAASC,cAAc,SAC3BC,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBACN,IAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCO,EAAQC,OAAOJ,EAAWK,OAC1BC,EAAOF,OAAOH,EAAUI,OACxBE,EAASH,OAAOF,EAAYG,OAElC,GAAIL,EAAWQ,iBAAmBP,EAAUO,iBAAmBN,EAAYM,gBAAiB,CAC1FC,EAAA1B,GAAS2B,QAAQC,SAAS,wBAG1B,IADA,IAAMC,EAAW,GACRC,EAAI,EAAGA,GAAKN,EAAQM,IAC3BD,EAASE,KAAK7B,EAAc4B,EAAGV,GAASU,EAAI,GAAKP,IAGnDlB,QAAQ2B,WAAWH,GAChBI,MAAK,SAAAC,GACJA,EAAQC,SAAQ,SAACC,EAAQC,GACvB,IAA4BC,EAAAF,EAAOd,OAASc,EAAOG,OAA3CpC,EAAoBmC,EAApBnC,SAAUC,EAAUkC,EAAVlC,MACI,cAAlBgC,EAAOI,OACTd,EAAA1B,GAASyC,OAAOC,QAAQ,uBAAwCC,OAAfxC,EAAS,QAAYwC,OAANvC,EAAM,OAEtEsB,EAAA1B,GAASyC,OAAOG,QAAQ,sBAAqCD,OAAfxC,EAAS,QAAYwC,OAANvC,EAAM,M,OAIxEyC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,GACdpB,EAAA1B,GAASyC,OAAOG,QAAQ,4C,IAEzBI,SAAQ,WACPtB,EAAA1B,GAAS2B,QAAQsB,OAAO,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\n\nfunction createPromise(position, delay) {\n      return new Promise((resolve, reject) => {\n        const shouldResolve = Math.random() > 0.3;\n        setTimeout(() => {\n          if (shouldResolve) {\n            resolve({ position, delay });\n          } else {\n            reject({ position, delay });\n          }\n        }, delay);\n      });\n    }\n\nconst form = document.querySelector('.form');\n    form.addEventListener('submit', function (event) {\n      event.preventDefault();\n      const delayInput = document.querySelector('input[name=\"delay\"]');\n      const stepInput = document.querySelector('input[name=\"step\"]');\n      const amountInput = document.querySelector('input[name=\"amount\"]');\n\n      const delay = Number(delayInput.value);\n      const step = Number(stepInput.value);\n      const amount = Number(amountInput.value);\n\n      if (delayInput.checkValidity() && stepInput.checkValidity() && amountInput.checkValidity()) {\n        Notiflix.Loading.standard('Creating promises...');\n\n        const promises = [];\n        for (let i = 1; i <= amount; i++) {\n          promises.push(createPromise(i, delay + (i - 1) * step));\n        }\n\n        Promise.allSettled(promises)\n          .then(results => {\n            results.forEach((result, index) => {\n              const { position, delay } = result.value || result.reason;\n              if (result.status === 'fulfilled') {\n                Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n              } else {\n                Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n              }\n            });\n          })\n          .catch(error => {\n            console.error(error);\n            Notiflix.Notify.failure('An error occurred while creating promises');\n          })\n          .finally(() => {\n            Notiflix.Loading.remove(500);\n          });\n      }\n    });"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","delay1","Number","value","step","amount","checkValidity","$parcel$interopDefault","Loading","standard","promises","i","push","allSettled","then","results","forEach","result","index","ref","reason","status","Notify","success","concat","failure","catch","error","console","finally","remove"],"version":3,"file":"03-promises.35d42ad1.js.map"}
{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAAU,SAAUC,GACxCA,EAAMC,iBAEN,MAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCO,EAAQC,OAAOJ,EAAWK,OAC1BC,EAAOF,OAAOH,EAAUI,OACxBE,EAASH,OAAOF,EAAYG,OAElC,GAAIL,EAAWQ,iBAAmBP,EAAUO,iBAAmBN,EAAYM,gBAAiB,CAC1FC,EAAA1B,GAAS2B,QAAQC,SAAS,wBAE1B,MAAMC,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAQM,IAC3BD,EAASE,KAAK7B,EAAc4B,EAAGV,GAASU,EAAI,GAAKP,IAGnDlB,QAAQ2B,WAAWH,GAChBI,MAAKC,IACJA,EAAQC,SAAQ,CAACC,EAAQC,KACvB,MAAMlC,SAAEA,EAAQC,MAAEA,GAAUgC,EAAOd,OAASc,EAAOE,OAC7B,cAAlBF,EAAOG,OACTb,EAAA1B,GAASwC,OAAOC,QAAQ,uBAAqBtC,QAAiBC,OAE9DsB,EAAA1B,GAASwC,OAAOE,QAAQ,sBAAoBvC,QAAeC,MAAU,GAEvE,IAEHuC,OAAMC,IACLC,QAAQD,MAAMA,GACdlB,EAAA1B,GAASwC,OAAOE,QAAQ,4CAA4C,IAErEI,SAAQ,KACPpB,EAAA1B,GAAS2B,QAAQoB,OAAO,IAAI,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', function (event) {\n  event.preventDefault(); \n\n  const delayInput = document.querySelector('input[name=\"delay\"]');\n  const stepInput = document.querySelector('input[name=\"step\"]');\n  const amountInput = document.querySelector('input[name=\"amount\"]');\n\n  const delay = Number(delayInput.value);\n  const step = Number(stepInput.value);\n  const amount = Number(amountInput.value);\n\n  if (delayInput.checkValidity() && stepInput.checkValidity() && amountInput.checkValidity()) {\n    Notiflix.Loading.standard('Creating promises...');\n\n    const promises = [];\n    for (let i = 1; i <= amount; i++) {\n      promises.push(createPromise(i, delay + (i - 1) * step));\n    }\n\n    Promise.allSettled(promises)\n      .then(results => {\n        results.forEach((result, index) => {\n          const { position, delay } = result.value || result.reason;\n          if (result.status === 'fulfilled') {\n            Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n          } else {\n            Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n          }\n        });\n      })\n      .catch(error => {\n        console.error(error);\n        Notiflix.Notify.failure('An error occurred while creating promises');\n      })\n      .finally(() => {\n        Notiflix.Loading.remove(500);\n      });\n  }\n});\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","delay1","Number","value","step","amount","checkValidity","$parcel$interopDefault","Loading","standard","promises","i","push","allSettled","then","results","forEach","result","index","reason","status","Notify","success","failure","catch","error","console","finally","remove"],"version":3,"file":"03-promises.40ce71a2.js.map"}